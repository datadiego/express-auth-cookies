name: CI/CD for Express App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18 # Ajusta la versión según tu entorno

    - name: Install Dependencies
      run: npm install

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/express-app:${{ github.sha }} .
        docker tag ${{ secrets.DOCKER_USERNAME }}/express-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/express-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/express-app:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/express-app:latest

#    - name: Deploy to Server
#      run: |
#        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
#        docker pull ${{ secrets.DOCKER_USERNAME }}/express-app:latest
#        docker stop express-app || true
#        docker rm express-app || true
#        docker run -d --name express-app -p 80:3000 ${{ secrets.DOCKER_USERNAME }}/express-app:latest
#        EOF